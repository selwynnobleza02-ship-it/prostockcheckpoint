// Mocks generated by Mockito 5.4.6 from annotations
// in prostock/test/provider_tests.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i16;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:connectivity_plus/connectivity_plus.dart' as _i20;
import 'package:firebase_auth/firebase_auth.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:prostock/models/app_user.dart' as _i12;
import 'package:prostock/models/credit_transaction.dart' as _i11;
import 'package:prostock/models/customer.dart' as _i9;
import 'package:prostock/models/paginated_result.dart' as _i3;
import 'package:prostock/models/product.dart' as _i8;
import 'package:prostock/models/receipt.dart' as _i18;
import 'package:prostock/models/sale.dart' as _i10;
import 'package:prostock/models/user_activity.dart' as _i13;
import 'package:prostock/models/user_role.dart' as _i15;
import 'package:prostock/providers/auth_provider.dart' as _i14;
import 'package:prostock/providers/connectivity_provider.dart' as _i19;
import 'package:prostock/providers/inventory_provider.dart' as _i21;
import 'package:prostock/providers/sales_provider.dart' as _i17;
import 'package:prostock/services/firestore_service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocumentSnapshot_1<T extends Object?> extends _i1.SmartFake
    implements _i2.DocumentSnapshot<T> {
  _FakeDocumentSnapshot_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePaginatedResult_2<T> extends _i1.SmartFake
    implements _i3.PaginatedResult<T> {
  _FakePaginatedResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FirestoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreService extends _i1.Mock implements _i4.FirestoreService {
  MockFirestoreService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get products =>
      (super.noSuchMethod(
            Invocation.getter(#products),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#products),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i2.CollectionReference<Object?> get customers =>
      (super.noSuchMethod(
            Invocation.getter(#customers),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#customers),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i2.CollectionReference<Object?> get sales =>
      (super.noSuchMethod(
            Invocation.getter(#sales),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#sales),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i2.CollectionReference<Object?> get users =>
      (super.noSuchMethod(
            Invocation.getter(#users),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#users),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i2.CollectionReference<Object?> get activities =>
      (super.noSuchMethod(
            Invocation.getter(#activities),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#activities),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i2.CollectionReference<Object?> get creditTransactions =>
      (super.noSuchMethod(
            Invocation.getter(#creditTransactions),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#creditTransactions),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i2.CollectionReference<Object?> get saleItems =>
      (super.noSuchMethod(
            Invocation.getter(#saleItems),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#saleItems),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i2.CollectionReference<Object?> get stockMovements =>
      (super.noSuchMethod(
            Invocation.getter(#stockMovements),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#stockMovements),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i2.CollectionReference<Object?> get errorLogs =>
      (super.noSuchMethod(
            Invocation.getter(#errorLogs),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#errorLogs),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i5.Stream<_i6.User?> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i5.Stream<_i6.User?>.empty(),
          )
          as _i5.Stream<_i6.User?>);

  @override
  _i5.Future<void> initializeFirestore() =>
      (super.noSuchMethod(
            Invocation.method(#initializeFirestore, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String> addDocument(
    String? collection,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addDocument, [collection, data]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#addDocument, [collection, data]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<void> updateDocument(
    String? collection,
    String? docId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDocument, [collection, docId, data]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteDocument(String? collection, String? docId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteDocument, [collection, docId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.DocumentSnapshot<Object?>> getDocument(
    String? collection,
    String? docId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getDocument, [collection, docId]),
            returnValue: _i5.Future<_i2.DocumentSnapshot<Object?>>.value(
              _FakeDocumentSnapshot_1<Object?>(
                this,
                Invocation.method(#getDocument, [collection, docId]),
              ),
            ),
          )
          as _i5.Future<_i2.DocumentSnapshot<Object?>>);

  @override
  _i5.Stream<_i2.QuerySnapshot<Object?>> getCollection(String? collection) =>
      (super.noSuchMethod(
            Invocation.method(#getCollection, [collection]),
            returnValue: _i5.Stream<_i2.QuerySnapshot<Object?>>.empty(),
          )
          as _i5.Stream<_i2.QuerySnapshot<Object?>>);

  @override
  _i5.Future<void> logActivity(
    String? userId,
    String? action,
    String? details, {
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #logActivity,
              [userId, action, details],
              {#metadata: metadata},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  bool isValidEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#isValidEmail, [email]),
            returnValue: false,
          )
          as bool);

  @override
  bool isValidPhoneNumber(String? phone) =>
      (super.noSuchMethod(
            Invocation.method(#isValidPhoneNumber, [phone]),
            returnValue: false,
          )
          as bool);

  @override
  _i5.Future<String> insertProduct(_i8.Product? product) =>
      (super.noSuchMethod(
            Invocation.method(#insertProduct, [product]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#insertProduct, [product]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<List<String>> insertProductsBatch(
    List<_i8.Product>? productsList,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#insertProductsBatch, [productsList]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<_i8.Product>> getAllProducts() =>
      (super.noSuchMethod(
            Invocation.method(#getAllProducts, []),
            returnValue: _i5.Future<List<_i8.Product>>.value(<_i8.Product>[]),
          )
          as _i5.Future<List<_i8.Product>>);

  @override
  _i5.Future<List<_i8.Product>> searchProducts(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchProducts, [query]),
            returnValue: _i5.Future<List<_i8.Product>>.value(<_i8.Product>[]),
          )
          as _i5.Future<List<_i8.Product>>);

  @override
  _i5.Future<_i8.Product?> getProductByBarcode(String? barcode) =>
      (super.noSuchMethod(
            Invocation.method(#getProductByBarcode, [barcode]),
            returnValue: _i5.Future<_i8.Product?>.value(),
          )
          as _i5.Future<_i8.Product?>);

  @override
  _i5.Future<_i8.Product?> getProductById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getProductById, [id]),
            returnValue: _i5.Future<_i8.Product?>.value(),
          )
          as _i5.Future<_i8.Product?>);

  @override
  _i5.Future<void> updateProduct(_i8.Product? product) =>
      (super.noSuchMethod(
            Invocation.method(#updateProduct, [product]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteProduct(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteProduct, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.PaginatedResult<_i8.Product>> getProductsPaginated({
    int? limit = 50,
    _i2.DocumentSnapshot<Object?>? lastDocument,
    String? searchQuery,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getProductsPaginated, [], {
              #limit: limit,
              #lastDocument: lastDocument,
              #searchQuery: searchQuery,
            }),
            returnValue: _i5.Future<_i3.PaginatedResult<_i8.Product>>.value(
              _FakePaginatedResult_2<_i8.Product>(
                this,
                Invocation.method(#getProductsPaginated, [], {
                  #limit: limit,
                  #lastDocument: lastDocument,
                  #searchQuery: searchQuery,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.PaginatedResult<_i8.Product>>);

  @override
  _i5.Future<String> insertCustomer(_i9.Customer? customer) =>
      (super.noSuchMethod(
            Invocation.method(#insertCustomer, [customer]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#insertCustomer, [customer]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<List<_i9.Customer>> getAllCustomers() =>
      (super.noSuchMethod(
            Invocation.method(#getAllCustomers, []),
            returnValue: _i5.Future<List<_i9.Customer>>.value(<_i9.Customer>[]),
          )
          as _i5.Future<List<_i9.Customer>>);

  @override
  _i5.Future<List<_i9.Customer>> searchCustomers(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchCustomers, [query]),
            returnValue: _i5.Future<List<_i9.Customer>>.value(<_i9.Customer>[]),
          )
          as _i5.Future<List<_i9.Customer>>);

  @override
  _i5.Future<_i9.Customer?> getCustomerById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getCustomerById, [id]),
            returnValue: _i5.Future<_i9.Customer?>.value(),
          )
          as _i5.Future<_i9.Customer?>);

  @override
  _i5.Future<void> updateCustomer(_i9.Customer? customer) =>
      (super.noSuchMethod(
            Invocation.method(#updateCustomer, [customer]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateCustomerBalance(
    String? customerId,
    double? amountChange,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateCustomerBalance, [
              customerId,
              amountChange,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.PaginatedResult<_i9.Customer>> getCustomersPaginated({
    int? limit = 50,
    _i2.DocumentSnapshot<Object?>? lastDocument,
    String? searchQuery,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCustomersPaginated, [], {
              #limit: limit,
              #lastDocument: lastDocument,
              #searchQuery: searchQuery,
            }),
            returnValue: _i5.Future<_i3.PaginatedResult<_i9.Customer>>.value(
              _FakePaginatedResult_2<_i9.Customer>(
                this,
                Invocation.method(#getCustomersPaginated, [], {
                  #limit: limit,
                  #lastDocument: lastDocument,
                  #searchQuery: searchQuery,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.PaginatedResult<_i9.Customer>>);

  @override
  _i5.Future<String> insertSale(_i10.Sale? sale) =>
      (super.noSuchMethod(
            Invocation.method(#insertSale, [sale]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#insertSale, [sale]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> insertSaleItem(_i10.SaleItem? saleItem) =>
      (super.noSuchMethod(
            Invocation.method(#insertSaleItem, [saleItem]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#insertSaleItem, [saleItem]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> insertCompleteTransaction(
    _i10.Sale? sale,
    List<_i10.SaleItem>? saleItems,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#insertCompleteTransaction, [sale, saleItems]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#insertCompleteTransaction, [
                  sale,
                  saleItems,
                ]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<List<_i10.Sale>> getAllSales() =>
      (super.noSuchMethod(
            Invocation.method(#getAllSales, []),
            returnValue: _i5.Future<List<_i10.Sale>>.value(<_i10.Sale>[]),
          )
          as _i5.Future<List<_i10.Sale>>);

  @override
  _i5.Future<List<_i10.SaleItem>> getSaleItemsBySaleId(String? saleId) =>
      (super.noSuchMethod(
            Invocation.method(#getSaleItemsBySaleId, [saleId]),
            returnValue: _i5.Future<List<_i10.SaleItem>>.value(
              <_i10.SaleItem>[],
            ),
          )
          as _i5.Future<List<_i10.SaleItem>>);

  @override
  _i5.Future<_i3.PaginatedResult<_i10.Sale>> getSalesPaginated({
    int? limit = 30,
    _i2.DocumentSnapshot<Object?>? lastDocument,
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSalesPaginated, [], {
              #limit: limit,
              #lastDocument: lastDocument,
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i5.Future<_i3.PaginatedResult<_i10.Sale>>.value(
              _FakePaginatedResult_2<_i10.Sale>(
                this,
                Invocation.method(#getSalesPaginated, [], {
                  #limit: limit,
                  #lastDocument: lastDocument,
                  #startDate: startDate,
                  #endDate: endDate,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.PaginatedResult<_i10.Sale>>);

  @override
  _i5.Future<Map<String, dynamic>> getSalesAnalytics({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSalesAnalytics, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<String> insertCreditTransaction(
    _i11.CreditTransaction? transaction,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#insertCreditTransaction, [transaction]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#insertCreditTransaction, [transaction]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<List<_i11.CreditTransaction>> getAllCreditTransactions() =>
      (super.noSuchMethod(
            Invocation.method(#getAllCreditTransactions, []),
            returnValue: _i5.Future<List<_i11.CreditTransaction>>.value(
              <_i11.CreditTransaction>[],
            ),
          )
          as _i5.Future<List<_i11.CreditTransaction>>);

  @override
  _i5.Future<List<_i11.CreditTransaction>> getCreditTransactionsByCustomer(
    String? customerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getCreditTransactionsByCustomer, [customerId]),
            returnValue: _i5.Future<List<_i11.CreditTransaction>>.value(
              <_i11.CreditTransaction>[],
            ),
          )
          as _i5.Future<List<_i11.CreditTransaction>>);

  @override
  _i5.Future<String> insertStockMovement(
    String? productId,
    String? movementType,
    int? quantity,
    String? reason,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#insertStockMovement, [
              productId,
              movementType,
              quantity,
              reason,
            ]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#insertStockMovement, [
                  productId,
                  movementType,
                  quantity,
                  reason,
                ]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getStockMovementsByProduct(
    String? productId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getStockMovementsByProduct, [productId]),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<_i12.AppUser?> getUserByCredentials(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getUserByCredentials, [username, password]),
            returnValue: _i5.Future<_i12.AppUser?>.value(),
          )
          as _i5.Future<_i12.AppUser?>);

  @override
  _i5.Future<_i12.AppUser?> getUserByUsername(String? username) =>
      (super.noSuchMethod(
            Invocation.method(#getUserByUsername, [username]),
            returnValue: _i5.Future<_i12.AppUser?>.value(),
          )
          as _i5.Future<_i12.AppUser?>);

  @override
  _i5.Future<_i12.AppUser?> getUserByEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#getUserByEmail, [email]),
            returnValue: _i5.Future<_i12.AppUser?>.value(),
          )
          as _i5.Future<_i12.AppUser?>);

  @override
  _i5.Future<_i12.AppUser?> getUserById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getUserById, [id]),
            returnValue: _i5.Future<_i12.AppUser?>.value(),
          )
          as _i5.Future<_i12.AppUser?>);

  @override
  _i5.Future<List<_i12.AppUser>> getAllUsers() =>
      (super.noSuchMethod(
            Invocation.method(#getAllUsers, []),
            returnValue: _i5.Future<List<_i12.AppUser>>.value(<_i12.AppUser>[]),
          )
          as _i5.Future<List<_i12.AppUser>>);

  @override
  _i5.Future<String> insertUser(_i12.AppUser? user) =>
      (super.noSuchMethod(
            Invocation.method(#insertUser, [user]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#insertUser, [user]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<void> updateUser(_i12.AppUser? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [user]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String> insertUserActivity(_i13.UserActivity? activity) =>
      (super.noSuchMethod(
            Invocation.method(#insertUserActivity, [activity]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#insertUserActivity, [activity]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<List<_i13.UserActivity>> getUserActivities(
    String? userId, {
    int? limit = 100,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getUserActivities, [userId], {#limit: limit}),
            returnValue: _i5.Future<List<_i13.UserActivity>>.value(
              <_i13.UserActivity>[],
            ),
          )
          as _i5.Future<List<_i13.UserActivity>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getAllUserActivitiesWithUsernames({
    int? limit = 200,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAllUserActivitiesWithUsernames, [], {
              #limit: limit,
            }),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<_i13.UserActivity>> getActivitiesByDateRange(
    DateTime? start,
    DateTime? end, {
    String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getActivitiesByDateRange,
              [start, end],
              {#userId: userId},
            ),
            returnValue: _i5.Future<List<_i13.UserActivity>>.value(
              <_i13.UserActivity>[],
            ),
          )
          as _i5.Future<List<_i13.UserActivity>>);

  @override
  _i5.Future<_i3.PaginatedResult<_i13.UserActivity>>
  getUserActivitiesPaginated({
    required String? userId,
    int? limit = 50,
    _i2.DocumentSnapshot<Object?>? lastDocument,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getUserActivitiesPaginated, [], {
              #userId: userId,
              #limit: limit,
              #lastDocument: lastDocument,
            }),
            returnValue:
                _i5.Future<_i3.PaginatedResult<_i13.UserActivity>>.value(
                  _FakePaginatedResult_2<_i13.UserActivity>(
                    this,
                    Invocation.method(#getUserActivitiesPaginated, [], {
                      #userId: userId,
                      #limit: limit,
                      #lastDocument: lastDocument,
                    }),
                  ),
                ),
          )
          as _i5.Future<_i3.PaginatedResult<_i13.UserActivity>>);

  @override
  _i5.Future<void> debugFirestoreOperations() =>
      (super.noSuchMethod(
            Invocation.method(#debugFirestoreOperations, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i14.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  bool get isAdmin =>
      (super.noSuchMethod(Invocation.getter(#isAdmin), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<bool> login(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [email, password]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> checkAuthStatus() =>
      (super.noSuchMethod(
            Invocation.method(#checkAuthStatus, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> logActivity(
    String? action, {
    String? productName,
    String? productBarcode,
    int? quantity,
    double? amount,
    String? details,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #logActivity,
              [action],
              {
                #productName: productName,
                #productBarcode: productBarcode,
                #quantity: quantity,
                #amount: amount,
                #details: details,
              },
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> createUser(
    String? username,
    String? email,
    String? password,
    _i15.UserRole? role,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [username, email, password, role]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> resetPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [email]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SalesProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSalesProvider extends _i1.Mock implements _i17.SalesProvider {
  MockSalesProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i10.Sale> get sales =>
      (super.noSuchMethod(Invocation.getter(#sales), returnValue: <_i10.Sale>[])
          as List<_i10.Sale>);

  @override
  List<_i10.SaleItem> get currentSaleItems =>
      (super.noSuchMethod(
            Invocation.getter(#currentSaleItems),
            returnValue: <_i10.SaleItem>[],
          )
          as List<_i10.SaleItem>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasMoreData =>
      (super.noSuchMethod(Invocation.getter(#hasMoreData), returnValue: false)
          as bool);

  @override
  double get currentSaleTotal =>
      (super.noSuchMethod(
            Invocation.getter(#currentSaleTotal),
            returnValue: 0.0,
          )
          as double);

  @override
  String get formattedCurrentSaleTotal =>
      (super.noSuchMethod(
            Invocation.getter(#formattedCurrentSaleTotal),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.getter(#formattedCurrentSaleTotal),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> loadSales({
    bool? refresh = false,
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#loadSales, [], {
              #refresh: refresh,
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadMoreSales({DateTime? startDate, DateTime? endDate}) =>
      (super.noSuchMethod(
            Invocation.method(#loadMoreSales, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void clearCache() => super.noSuchMethod(
    Invocation.method(#clearCache, []),
    returnValueForMissingStub: null,
  );

  @override
  void addItemToCurrentSale(_i8.Product? product, int? quantity) =>
      super.noSuchMethod(
        Invocation.method(#addItemToCurrentSale, [product, quantity]),
        returnValueForMissingStub: null,
      );

  @override
  void removeItemFromCurrentSale(int? index) => super.noSuchMethod(
    Invocation.method(#removeItemFromCurrentSale, [index]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<_i18.Receipt?> completeSale({
    String? customerId,
    required String? paymentMethod,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#completeSale, [], {
              #customerId: customerId,
              #paymentMethod: paymentMethod,
            }),
            returnValue: _i5.Future<_i18.Receipt?>.value(),
          )
          as _i5.Future<_i18.Receipt?>);

  @override
  void clearCurrentSale() => super.noSuchMethod(
    Invocation.method(#clearCurrentSale, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<Map<String, dynamic>?> getSalesAnalytics({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSalesAnalytics, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i5.Future<Map<String, dynamic>?>.value(),
          )
          as _i5.Future<Map<String, dynamic>?>);

  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ConnectivityProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityProvider extends _i1.Mock
    implements _i19.ConnectivityProvider {
  MockConnectivityProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.ConnectivityResult get connectivity =>
      (super.noSuchMethod(
            Invocation.getter(#connectivity),
            returnValue: _i20.ConnectivityResult.bluetooth,
          )
          as _i20.ConnectivityResult);

  @override
  bool get isOnline =>
      (super.noSuchMethod(Invocation.getter(#isOnline), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [InventoryProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockInventoryProvider extends _i1.Mock implements _i21.InventoryProvider {
  MockInventoryProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i8.Product> get products =>
      (super.noSuchMethod(
            Invocation.getter(#products),
            returnValue: <_i8.Product>[],
          )
          as List<_i8.Product>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  List<_i8.Product> get lowStockProducts =>
      (super.noSuchMethod(
            Invocation.getter(#lowStockProducts),
            returnValue: <_i8.Product>[],
          )
          as List<_i8.Product>);

  @override
  List<_i8.Product> get criticalStockProducts =>
      (super.noSuchMethod(
            Invocation.getter(#criticalStockProducts),
            returnValue: <_i8.Product>[],
          )
          as List<_i8.Product>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void update(_i19.ConnectivityProvider? connectivityProvider) =>
      super.noSuchMethod(
        Invocation.method(#update, [connectivityProvider]),
        returnValueForMissingStub: null,
      );

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> loadProducts({bool? refresh = false, String? searchQuery}) =>
      (super.noSuchMethod(
            Invocation.method(#loadProducts, [], {
              #refresh: refresh,
              #searchQuery: searchQuery,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> addProduct(_i8.Product? product) =>
      (super.noSuchMethod(
            Invocation.method(#addProduct, [product]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> updateProduct(_i8.Product? product) =>
      (super.noSuchMethod(
            Invocation.method(#updateProduct, [product]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> updateStock(
    String? productId,
    int? newStock, {
    String? reason,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateStock,
              [productId, newStock],
              {#reason: reason},
            ),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<_i8.Product?> getProductByBarcode(String? barcode) =>
      (super.noSuchMethod(
            Invocation.method(#getProductByBarcode, [barcode]),
            returnValue: _i5.Future<_i8.Product?>.value(),
          )
          as _i5.Future<_i8.Product?>);

  @override
  bool isStockAvailable(String? productId, int? requestedQuantity) =>
      (super.noSuchMethod(
            Invocation.method(#isStockAvailable, [
              productId,
              requestedQuantity,
            ]),
            returnValue: false,
          )
          as bool);

  @override
  bool reserveStock(String? productId, int? quantity) =>
      (super.noSuchMethod(
            Invocation.method(#reserveStock, [productId, quantity]),
            returnValue: false,
          )
          as bool);

  @override
  void releaseReservedStock(String? productId, int? quantity) =>
      super.noSuchMethod(
        Invocation.method(#releaseReservedStock, [productId, quantity]),
        returnValueForMissingStub: null,
      );

  @override
  int getAvailableStock(String? productId) =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableStock, [productId]),
            returnValue: 0,
          )
          as int);

  @override
  _i5.Future<bool> receiveStock(String? productId, int? quantity) =>
      (super.noSuchMethod(
            Invocation.method(#receiveStock, [productId, quantity]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> reduceStock(
    String? productId,
    int? quantity, {
    String? reason,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #reduceStock,
              [productId, quantity],
              {#reason: reason},
            ),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
  @override
  _i5.Future<bool> batchUpdateStock(
    Map<String, int>? stockUpdates, {
    String? reason,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #batchUpdateStock,
              [stockUpdates],
              {#reason: reason},
            ),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> reconcileStock(Map<String, int>? physicalCounts) =>
      (super.noSuchMethod(
            Invocation.method(#reconcileStock, [physicalCounts]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void setReorderPoint(String? productId, int? reorderPoint) =>
      super.noSuchMethod(
        Invocation.method(#setReorderPoint, [productId, reorderPoint]),
        returnValueForMissingStub: null,
      );

  @override
  int getReorderPoint(String? productId) =>
      (super.noSuchMethod(
            Invocation.method(#getReorderPoint, [productId]),
            returnValue: 0,
          )
          as int);

  @override
  List<_i8.Product> getProductsNeedingReorder() =>
      (super.noSuchMethod(
            Invocation.method(#getProductsNeedingReorder, []),
            returnValue: <_i8.Product>[],
          )
          as List<_i8.Product>);

  @override
  _i8.Product? getProductById(String? id) =>
      (super.noSuchMethod(Invocation.method(#getProductById, [id]))
          as _i8.Product?);

  @override
  _i5.Future<void> refreshProducts() =>
      (super.noSuchMethod(
            Invocation.method(#refreshProducts, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
